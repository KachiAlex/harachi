rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() { return request.auth != null; }
    function userProfile() { return get(/databases/$(database)/documents/users/$(request.auth.uid)); }
    function hasPermission(perm) { return isSignedIn() && userProfile().exists() && perm in userProfile().data.permissions; }
    function isActiveUser() { return isSignedIn() && userProfile().exists() && userProfile().data.isActive == true; }

    match /tenants/{id} { allow read: if isSignedIn(); allow write: if hasPermission('admin:tenants:write'); }
    match /companies/{id} { allow read: if isSignedIn(); allow write: if hasPermission('admin:tenants:write'); }
    match /countries/{id} { allow read: if isSignedIn(); allow write: if hasPermission('admin:tenants:write'); }
    match /branches/{id} { allow read: if isSignedIn(); allow write: if hasPermission('admin:tenants:write'); }
    match /warehouses/{id} { allow read: if isSignedIn(); allow write: if hasPermission('tenant:settings:write') || hasPermission('inventory:write'); }
    match /itemClasses/{id} { allow read: if isSignedIn(); allow write: if hasPermission('inventory:write'); }
    match /items/{id} { allow read: if isSignedIn(); allow write: if hasPermission('inventory:write'); }
    match /roles/{id} { allow read: if isSignedIn(); allow write: if hasPermission('admin:tenants:write'); }
    match /users/{uid} {
      allow read: if isSignedIn() && (uid == request.auth.uid || hasPermission('admin:tenants:write'));
      allow write: if isSignedIn() && ((uid == request.auth.uid && request.resource.data.keys().hasOnly(['email','displayName','tenantId','countryId','branchId','roleId','permissions','isActive','createdAt','updatedAt'])) || hasPermission('admin:tenants:write'));
    }
    match /purchaseOrders/{id} { allow read: if hasPermission('procurement:read'); allow write: if hasPermission('procurement:write'); }
    match /goodsReceipts/{id} { allow read: if hasPermission('procurement:read'); allow write: if hasPermission('procurement:write'); }
    match /recipes/{id} { allow read: if hasPermission('production:read'); allow write: if hasPermission('production:write'); }
    match /productionOrders/{id} { allow read: if hasPermission('production:read'); allow write: if hasPermission('production:write'); }
    match /qcTests/{id} { allow read: if hasPermission('quality:read'); allow write: if hasPermission('quality:write'); }
    match /{document=**} { allow read, write: if false; }
  }
}